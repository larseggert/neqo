name: 'QUIC Interop Runner Action'
description: 'Run the QUIC Interop Runner tests.'
author: 'mxinden'

inputs:
  client:
    description: 'client implementations (comma-separated)'
    required: false
    default: ''
  server:
    description: 'server implementations (comma-separated)'
    required: false
    default: ''
  test:
    description: 'test cases (comma-separatated)'
    required: false
    default: 'onlyTests'
  implementations:
    description: 'Modified "implementations.json" data'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: Checkout quic-interop/quic-interop-runner repository
      uses: actions/checkout@v4
      with:
        repository: 'quic-interop/quic-interop-runner'
        path: 'quic-interop-runner'

    - name: Enable IPv6 support
      run: sudo modprobe ip6table_filter
      shell: bash

    - name: Install dependencies
      run: |
        sudo add-apt-repository ppa:wireshark-dev/stable
        sudo apt-get update
        sudo apt-get install -y wireshark tshark jq
      shell: bash

    - uses: actions/setup-python@v5
      with:
        python-version: 3.8
        cache: 'pip'
        cache-dependency-path: 'quic-interop-runner/requirements.txt'

    - name: Install Python packages
      run: |
        cd quic-interop-runner
        pip install -U pip
        pip install -r requirements.txt
      shell: bash

    - name: Run tests
      run: |
        cd quic-interop-runner
        if [ -n "${{ inputs.implementations }}" ]; then
          printf '%s' "${{ inputs.implementations }}" > implementations.json
        fi
        cat implementations.json
        ARGS="--log-dir logs --markdown --json result.json"
        if [ -n "${{ inputs.client }}" ]; then
          ARGS="$ARGS --client ${{ inputs.client }}"
        fi
        if [ -n "${{ inputs.server }}" ]; then
          ARGS="$ARGS --server ${{ inputs.server }}"
        fi
        if [ -n "${{ inputs.test }}" ]; then
          ARGS="$ARGS --test ${{ inputs.test }}"
        fi
        echo $ARGS
        python run.py $ARGS 2>&1 | tee summary
      shell: bash

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: logs
        path: quic-interop-runner/logs

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: results
        path: quic-interop-runner/results.json

    # - name: Format GitHub comment
    #   if: always()
    #   run: |
    #     echo '[**QUIC Interop Runner**](https://github.com/quic-interop/quic-interop-runner)' >> comment
    #     echo '' >> comment
    #     # Ignore all, but table, which starts with "|". Also reformat it to GitHub Markdown.
    #     grep -E '^\|' quic-interop-runner/summary |\
    #       awk '(!/^\| *:-/ || (d++ && d < 3))' |\
    #       sed -E -e 's/✓/:white_check_mark:/gi' -e 's/✕/:x:/gi' -e 's/\?/:grey_question:/gi' \
    #       >> comment
    #     echo '' >> comment
    #     echo "EXPORT_COMMENT=1" >> "$GITHUB_ENV"
    #   shell: bash

    # - name: Export PR comment data
    #   if: always()
    #   uses: ./.github/actions/pr-comment-data-export
    #   with:
    #     name: qns
    #     contents: comment
    #     log-url: ${{ steps.artifact-upload-step.outputs.artifact-url }}
