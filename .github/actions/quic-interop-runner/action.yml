name: 'QUIC Interop Runner Action'
description: 'Run the QUIC Interop Runner tests.'
author: 'mxinden'

inputs:
  name:
    description: 'Name of the QUIC implementation'
    required: true
  image:
    description: 'Docker image to be tested. Needs to reside either locally, or on some registry.'
    required: true
  url:
    description: 'URL of the QUIC implementation'
    required: true
  role:
    description: 'client/server/both'
    required: false
    default: 'both'

runs:
  using: "composite"
  steps:
    - name: Install dependencies
      shell: bash
      run: sudo apt-get install -y --no-install-recommends jq curl

    - name: Configure matrix
      id: config
      run: |
        curl https://raw.githubusercontent.com/quic-interop/quic-interop-runner/master/implementations.json | jq 'keys' > implementations.json
        {
          echo "IMPLEMENTATIONS<<EOF"
          cat implementations.json
          echo "EOF"
        } >> $GITHUB_ENV

    - name: Run tests
      strategy:
        fail-fast: false
        matrix:
          client: ${{ fromJson(env.IMPLEMENTATIONS) }}
          server: ${{ fromJson(env.IMPLEMENTATIONS) }}
      runs-on: ubuntu-latest
      name: ${{ matrix.client }} x ${{ matrix.server }}
      steps:
      - name: Checkout quic-interop/quic-interop-runner repository
        uses: actions/checkout@v4
        with:
          repository: 'quic-interop/quic-interop-runner'
          path: 'quic-interop-runner'

      - name: Enable IPv6 support
        shell: bash
        run: sudo modprobe ip6table_filter

      - name: Install dependencies
        shell: bash
        run: |
          sudo add-apt-repository ppa:wireshark-dev/stable
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends wireshark tshark jq

      - uses: actions/setup-python@v5
        with:
          python-version: 3.8
          cache: 'pip'
          cache-dependency-path: 'quic-interop-runner/requirements.txt'

      - name: Install Python packages
        run: |
          cd quic-interop-runner
          pip install -U pip
          pip install -r requirements.txt
        shell: bash

      - name: Run tests
        id: test-run
        run: |
          cd quic-interop-runner
          jq --arg key "${{ inputs.name }}" --argjson newEntry '{"image": "${{ inputs.image }}", "url": "${{ inputs.url }}", "role": "${{ inputs.role }}"}' '.[$key] = $newEntry' implementations.json > temp.$$ && mv temp.$$ implementations.json
          cat implementations.json
          python run.py -t onlyTests -l logs -m -c ${{ matrix.client }} -s ${{ matrix.server }} | tee summary
        shell: bash

      - uses: actions/upload-artifact@v4
        id: artifact-upload-step
        if: always()
        with:
          name: logs-${{ matrix.client }}-x-${{ matrix.server }}
          path: quic-interop-runner/logs
